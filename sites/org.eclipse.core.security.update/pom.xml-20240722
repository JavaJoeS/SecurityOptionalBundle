<?xml version="1.0" encoding="UTF-8"?>
<project>
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.eclipse</groupId>
		<artifactId>marketplacepki</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<groupId>org.eclipse</groupId>
	<artifactId>org.eclipse.core.pki.update</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<!--<packaging>pom</packaging>-->
	<packaging>eclipse-repository</packaging>
	<properties>
		<!--<repositoryLocation>${basedir}/target/repositoryFiles</repositoryLocation>-->
		<repo.home>${basedir}/target/repository</repo.home>
		<!--<repo.location>${basedir}/target/repository/${buildQualifier}</repo.location>-->
		<repo.location>${basedir}/target/repository</repo.location>
		<publish.location>${basedir}/target/publish</publish.location>
		<!--<p2.repo.url>https://idetoolsio.github.io/core/updatesite</p2.repo.url>-->
		<p2.repo.url>https://www.delmarvasecurity.net/p2site</p2.repo.url>
		<!--<p2.repo.url>
			file:///home/joe/git/PkiBundle/pki/p2site/org.eclipse.core.pki.update/target/repository</p2.repo.url>-->
		<local.uuid>${project.build.uuid}</local.uuid>
		<local.p2.timestamp>${timestamp}</local.p2.timestamp>
		<update.id>org.eclipse.core.pki.update-1.0.0-SNAPSHOT</update.id>
	</properties>
	<build>
		<plugins>

			<plugin>
				<groupId>us.springett</groupId>
				<artifactId>maven-uuid-generator</artifactId>
				<version>1.0.1</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create-timestamp</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<doCheck>true</doCheck>
					<doUpdate>true</doUpdate>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-p2-publisher-plugin</artifactId>
				<version>${tycho.version}</version>

				<executions>
					<execution>
						<id>publish-p2-site</id>
						<phase>process-resources</phase>
						<goals>
							<goal>publish-categories</goal>
						</goals>
						<configuration>
							<categoriesDirectory>${project.basedir}</categoriesDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-p2-director-plugin</artifactId>
				<executions>
					<execution>
						<id>create-product-distributions</id>
						<goals>
							<goal>materialize-products</goal>
							<goal>archive-products</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<installFeatures>true</installFeatures>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-p2-plugin</artifactId>
				<version>${tycho.version}</version>
				<executions>
					<execution>
						<id>create-features</id>
						<goals>
							<goal>feature-p2-metadata</goal>
							<goal>update-site-p2-metadata</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<generateP2Metadata>true</generateP2Metadata>
					<target>target/repository/features</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.eclipse.tycho.extras</groupId>
				<artifactId>tycho-p2-extras-plugin</artifactId>
				<version>${tycho.version}</version>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>publish-features-and-bundles</goal>
						</goals>
						<configuration>
							<publishArtifacts>true</publishArtifacts>
							<append>true</append>
							<compress>false</compress>
							<artifactRepositoryLocation>${repo.location}</artifactRepositoryLocation>
							<metadataRepositoryLocation>${repo.location}</metadataRepositoryLocation>
							<sourceLocation>${repo.location}</sourceLocation>
							<sourceLocation>${project.build.directory}/classes</sourceLocation>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.3.1</version>
				<executions>

					<execution>
						<id>copy-plugins</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>
										../../bundles/org.eclipse.core.pki/target</directory>
									<includes>
										<include>*.jar</include>
									</includes>
								</resource>
								<resource>
									<directory>
										../../bundles/org.eclipse.ui.pki/target</directory>
									<includes>
										<include>*.jar</include>
									</includes>
								</resource>
								<resource>
									<directory>
										../../bundles/org.eclipse.ui.pki/target/dependency</directory>
									<includes>
										<include>*.jar</include>
									</includes>
								</resource>
								<resource>
									<directory>${project.basedir}</directory>
									<includes>
										<include>p2.index</include>
									</includes>
								</resource>
							</resources>

							<outputDirectory>
								${repo.location}/plugins</outputDirectory>
						</configuration>
					</execution>

					<execution>
						<id>copy-features</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>
										../../features/org.eclipse.core.pki.feature/target</directory>
									<includes>
										<include>*.jar</include>
										<include>*.zip</include>
									</includes>
								</resource>

							</resources>

							<outputDirectory>${repo.location}/features</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>copy-site</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>
										${project.build.directory}/classes</directory>
									<includes>
										<include>site.xml</include>
									</includes>
								</resource>

							</resources>

							<outputDirectory>${repo.home}</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>copy-composite</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>
										${project.build.directory}/classes</directory>
									<includes>
										<include>composite*.xml</include>
									</includes>
								</resource>

							</resources>

							<outputDirectory>${repo.home}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-p2-repository-plugin</artifactId>
				<version>${tycho.version}</version>
				<executions>
					<execution>
						<id>maven-p2-site</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>assemble-maven-repository</goal>
							<goal>fix-artifacts-metadata</goal>
							<goal>archive-repository</goal>
						</goals>
						<configuration>
							<includeReactor>false</includeReactor>
							<includeDependencies>true</includeDependencies>
							<includeTransitiveDependencies>false</includeTransitiveDependencies>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			
			<!--<plugin>
				<groupId>com.coderplus.maven.plugins</groupId>
				<artifactId>copy-rename-maven-plugin</artifactId>
				<version>1.0.1</version>
				<executions>
					<execution>
						<id>rename-file</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>rename</goal>
						</goals>
						<configuration>
							<sourceFile>
								${project.build.directory}/repository/p2.index
							</sourceFile>
							<destinationFile>
								${project.build.directory}/repository/site.xml</destinationFile>
						</configuration>
					</execution>
				</executions>
			</plugin>-->
			
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.1</version>
				<executions>
					<execution>
						<id>create-artifacts-jar</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<minimizeJar>true</minimizeJar>
							<artifactSet>
								<excludes>
									<exclude>*</exclude>
								</excludes>
							</artifactSet>
							<transformers>     
                                <transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                                    <resource>artifacts.xml</resource>
                                    <file>${project.build.directory}/classes/artifacts.xml</file>
                                </transformer>
                            </transformers>
							<filters>
								<filter>
									<excludes>
										<exclude>META-INF/**</exclude>
									</excludes>
								</filter>
							</filters>
							<outputDirectory>${repo.location}</outputDirectory>
							<finalName>artifacts</finalName>
						</configuration>
					</execution>
					<execution>
						<id>create-content-jar</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<minimizeJar>true</minimizeJar>
							<artifactSet>
								<excludes>
									<exclude>*</exclude>
								</excludes>
							</artifactSet>
							<transformers>     
                                <transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                                    <resource>content.xml</resource>
                                    <file>${project.build.directory}/classes/content.xml</file>
                                </transformer>
                            </transformers>
							<filters>
								<filter>
									<excludes>
										<exclude>META-INF/**</exclude>
									</excludes>
								</filter>
							</filters>
							<outputDirectory>${repo.location}</outputDirectory>
							<finalName>content</finalName>
						</configuration>
					</execution>
				</executions>

			</plugin>
			
			<!--<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.7.1</version>

				<executions>
					<execution>
						<id>build-artifacts-to-jar</id>
						<configuration>
							<inlineDescriptors>
								<inlineDescriptor>
									<id>artifacts-jar-them-up</id>
									<formats>
										<format>jar</format>
									</formats>
									<includeBaseDirectory>false</includeBaseDirectory>
									<fileSets>
										<fileset>
											<filtered>true</filtered>
											<includes>
												<include>
													artifacts.xml
												</include>
											</includes>
											<excludes>
												<exclude>META-INF/**</exclude>
												<exclude>META-INF/MANIFEST.MF</exclude>
											</excludes>
										</fileset>
									</fileSets>
									<files>
										<file>
											<source>
												${project.build.outputDirectory}/artifacts.xml</source>
											<outputDirectory>/footifacts</outputDirectory>
											<destName>artifacts.xml</destName>

										</file>
									</files>
								</inlineDescriptor>
							</inlineDescriptors>
							<finalName>repository/artifacts</finalName>
							<appendAssemblyId>false</appendAssemblyId>

						</configuration>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
					<execution>
						<id>build-content</id>
						<configuration>
							<archive></archive>
							<inlineDescriptors>
								<inlineDescriptor>
									<id>content</id>

									<formats>
										<format>jar</format>
									</formats>
									<includeBaseDirectory>false</includeBaseDirectory>
									<files>
										<file>
											<source>
												${project.build.outputDirectory}/content.xml</source>
											<destName>content.xml</destName>
										</file>
									</files>
								</inlineDescriptor>
							</inlineDescriptors>


							<finalName>repository/content</finalName>
							<appendAssemblyId>false</appendAssemblyId>
						</configuration>

						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
-->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
				<version>3.6.4</version>
				<configuration>
					<goalPrefix>build-xz</goalPrefix>
				</configuration>
				<executions>
					<execution>
						<id>generated-helpmojo</id>
						<phase>verify</phase>
						<goals>
							<goal>descriptor</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>ant-run-delete-blob</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target name="delete blobstore">
								<echo
									message="Deleting ${basedir}/target/repository..." />
								<!--<delete verbose="true" >
									
									<fileset
										dir="${basedir}/target/repository/.blobstore"/>
								</delete>-->
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>

</project>